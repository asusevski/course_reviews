{
    "CS 115": [
        {
        "id": 1,
        "review": "go to office hours and practice"
        },
        {
            "id": 2,
            "review": "One of my least favourite courses. Although things were nicely organized, Racket was such an annoying language to use. The one tangible benefit I felt after using Racket was feeling more comfortable with recursion."
        },
        {
            "id": 3,
            "review": "It starts with a very low pace but after midterm, it gets really fast and I cannot understand the content while reaching the end of term. Racket is restricted by so many things so I feel I lose the freedom of coding. The assignments are extremely hard after midterm, I spent a whole day on them but I can just solve the easiest one. The only positive impression that I have is that the design recipe weighs half so I pass this course successfully."
        },
        {
            "id": 4,
            "review": "Took this in 2018 with no programming experience ever. Started out pretty slow, but I didn't really pay attention and was severely behind. Went to a lot of office hours, but nonetheless caught up and did decently well. After taking more cs courses, racket really is a weird language."
        },
        {
            "id": 5,
            "review": "I loved everything about cs 115. Great instructors, fair assignments ( can get tricky but there's a huge amount of office hours to attend ), good engagement and interesting topics! It's seriously well structured and I would recommend it to anyone even with no background in coding."
        },
        {
            "id": 6,
            "review": "I recommend finding a course with a language that is actually useful. Racket is dumb and never used anywhere. The majority of the course was quite easy, except a couple of concept checks that were RIDICULOUSLY HARD. i wish i had realized sooner that you get 10% of concept checks dropped from your grade. if you understand everything and are getting most things easily but you get stumped on one particular concept check, its probably not your fault and you should skip it, at least for now. the course was very well structured and predictable. expectations were clear and reasonable. it actually was designed to be a correspondence course, so it wasnt an online course that was rushed and slapped together for covid."
        }
    ],
    "CS 136": [
        {
        "id": 1,
        "review": "you learn C. very useful if this is your first time programming in a C style language, syntax is essentially identical in most other languages. to nonbeginner programmers, still very useful since you learn about pointers and memory management. even though high level languages don't deal with this sort of stuff, its still useful when you hear terms like 'shallow/deep copy', 'pass by reference/value', you really understand what that means. also the data structures are useful to know about, especially the tree stuff and O notation."
        },
        {
            "id": 2,
            "review": "This course was a really good pivot after racket from CS135 and served as a great introduction to imperative programming. It tackled every single fundamental concept and serves as a great foundation for the data structures and algorithms stuff that is so important in the future. Assignments were challenging and you should start working on them early but luckily they weren't weighted insanely heavily which was good. I would suggest spending a lot of time on the initial 5-6 as they really help boost your assignment mark. The exams are not super theory heavy and it is crucial that you are able to code and solve problems, this is where the assignments are useful and why you should try to limit cheating. Most people wouldn't already know/learn C outside of a university context so this course serves as a way to do that."
        },
        {
            "id": 3,
            "review": "Important course, very well organized when I took it (Winter 2021). Spent a long time on assignments though."
        },
        {
            "id": 4,
            "review": "For the most part the course was very organized and it was very clear what was expected of the students, however that doesn't mean the course didn't get tedious at times lol. The assignments tended to get a bit too long and grindy, and it was frustrating to see your code fail minor edge cases. And Seashell..."
        },
        {
            "id": 5,
            "review": "The assignments weren't nearly as fun as 135 but it was similar in terms of difficulty. It was a good introduction to imperative programming in C. We focused a lot on how memory works with pointers and dynamic memory. Assignments weren't too hard but writing functions in the right time complexity was challenging. The exams were kinda dumb because we had to write code by hand and sometimes you have no idea why your test cases fail. This course definitely took a lot of time but it wasn't super difficult if you don't fall too far behind."
        }
    ],
    "PD 1": [
        {
            "id": 1, 
            "review": "Easy course, lots of work to do at the beginning, then almost nothing to do after the midterm, pretty boring"
        },
        {
            "id": 2,
            "review": "Ahh, good old PD. Content was mostly common sense, though some of their advice should actually be avoided, such as their resume template. Highly recommend to speedrun the course in the first week or two of classes just to get it over with. It doesn't take that long if you do the bare minimum, since the course is CR/NCR anyway. The TAs were very nice people though, wishing them the best!"
        },
        {
            "id": 3,
            "review": "i love doing chores : ) i wish they just replaced the course with a series of guides in a pdf or something or made everything optional with no grading. i know the course is pass/fail but you still have to do the minimum to get 50% so"
        },
        {
            "id": 4,
            "review": "The suggestion they give to me doesn't help me at all... So unless your TA has the same major as you, your TA's advice will always be useless. At least they provided useless information for me that actually affects my coop interview( prepared a lot of things that were not covered during the interview)"
        },
        {
            "id": 5,
            "review": "shit course, shit TAs. try to grind out the first five assignments so you can be done w this shitty-ass course."
        }
    ]
}